name: Generate Gource History Video

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_gource:
    name: Generate Gource History Video
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if workflow should run
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || [[ "${{ secrets.GOURCE }}" != "false" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Checkout repository
        if: steps.check.outputs.should_run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Gource and FFmpeg
        if: steps.check.outputs.should_run == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y gource ffmpeg xvfb xauth
      
      - name: Generate Gource video
        if: steps.check.outputs.should_run == 'true'
        run: |
          xvfb-run -a gource \
            . \
            --key \
            --highlight-users \
            --seconds-per-day 1 \
            --auto-skip-seconds 0.1 \
            --stop-at-end \
            --hide mouse,progress \
            --multi-sampling \
            --output-framerate 30 \
            -1280x720 -o - \
            | ffmpeg -y -r 30 -f image2pipe -vcodec ppm -i - \
            -vcodec libx264 -preset ultrafast -pix_fmt yuv420p \
            -crf 18 -threads 0 -bf 0 gource.mp4
      
      - name: Delete previous gource release if exists
        if: steps.check.outputs.should_run == 'true'
        continue-on-error: true
        run: |
          gh release delete gource-video --yes --cleanup-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Gource release with video
        if: steps.check.outputs.should_run == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: gource-video
          name: "📹 Gource Visualization (Auto-updated)"
          body: |
            ## Repository Visualization
            
            This video shows the development history of the repository.
            
            **⚠️ This is not a project release** - it's automatically generated for visualization purposes only.
            
            Last updated: ${{ github.event.head_commit.timestamp }}
          files: gource.mp4
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get video URL from release
        if: steps.check.outputs.should_run == 'true'
        id: get_url
        run: |
          sleep 5  # Esperar a que la release esté disponible
          ASSET_URL=$(gh release view gource-video --json assets --jq '.assets[0].url')
          echo "video_url=$ASSET_URL" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update README with video URL
        if: steps.check.outputs.should_run == 'true'
        run: |
          FILEPATH="README.md"
          START="GOURCE-VIDEO-START"
          END="GOURCE-VIDEO-END"
          TEXT="${{ steps.get_url.outputs.video_url }}"
          
          sudo apt-get install -y python3
          python3 .github/scripts/marker.py "$FILEPATH" "$START" "$END" "$TEXT"
      
      - name: Commit and push README changes
        if: steps.check.outputs.should_run == 'true'
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
          git add README.md
          
          if ! git diff --cached --quiet; then
            git commit -m "Update gource video URL [skip ci]"
            git push "https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF_NAME}
          else
            echo "No changes to commit"
          fi
